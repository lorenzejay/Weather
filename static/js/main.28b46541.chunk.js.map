{"version":3,"sources":["Components/Images/sun.png","Components/Images/cloudy.png","Components/Images/sunrise.png","Components/Images/rain.png","Components/Images/moon.png","Components/Images/solar.png","Components/ShowWeather.js","Components/Weather.js","App.js","index.js"],"names":["module","exports","ShowWeather","props","useState","forecast","map","item","i","icon","temperature","data","main","cloudy","haze","sun","rain","key","className","location","style","color","currentDate","fulldate","src","low","high","Weather","inputLocation","setInputLocation","setForecast","currentTime","setCurrentDate","d","Date","date","getDate","month","getMonth","year","getFullYear","fullDate","time","getHours","getMinutes","getSeconds","placeholder","type","name","onChange","e","target","value","onClick","preventDefault","axios","get","then","res","weatherData","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8GAAAA,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,iGCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,sMCiE5BC,MAzDf,SAAqBC,GAAQ,IAAD,EACoBC,qBADpB,mBAEpBC,GAFoB,UAETF,EAAME,SAASC,KAAI,SAACC,EAAMC,GACzC,IAEIC,EAEJ,OAJ2BF,EAAKG,YAAYC,KAAK,GAAGC,MAKlD,IAAK,SACHH,EAAOI,IACP,MACF,IAAK,OACHJ,EAAOK,IACP,MACF,IAAK,QACHL,EAAOM,IACP,MACF,IAAK,OACHN,EAAOO,IAGX,OACE,yBAAKC,IAAKT,EAAGU,UAAU,oBACrB,yBAAKA,UAAU,iCACb,4BAAKX,EAAKY,UACV,yBAAKC,MAAO,CAAEC,MAAO,UACnB,2BAAIlB,EAAMmB,YAAYC,UACtB,oCAAUpB,EAAMmB,YAAYA,aAC5B,0CAAgBf,EAAKG,YAAYC,KAAK,GAAGC,QAG7C,yBAAKM,UAAU,wBACb,yBAAKA,UAAU,uBACb,kCACA,yBAAKM,IAAKf,IACV,2BAAIF,EAAKG,YAAYe,IAArB,YAGF,yBAAKP,UAAU,uBACb,sCACA,yBAAKM,IAAKf,IACV,2BAAIF,EAAKG,YAAYA,YAArB,YAGF,yBAAKQ,UAAU,qBACb,mCACA,yBAAKM,IAAKf,IACV,2BAAIF,EAAKG,YAAYgB,KAArB,kBAOV,OAAO,yBAAKR,UAAU,yBAAyBb,ICMlCsB,MAhEf,WAAoB,IAAD,EACyBvB,mBAAS,IADlC,mBACVwB,EADU,KACKC,EADL,OAEezB,mBAAS,IAFxB,mBAEVC,EAFU,KAEAyB,EAFA,OAGqB1B,mBAAS,CAAEmB,SAAU,GAAIQ,YAAa,KAH3D,mBAGVT,EAHU,KAGGU,EAHH,KAKXC,EAAI,IAAIC,KACRC,EAAOF,EAAEG,UAgBTC,EAfS,CACb,UACA,UACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAGmBJ,EAAEK,YACjBC,EAAON,EAAEO,cACTC,EAAQ,UAAMJ,EAAN,YAAeF,EAAf,aAAwBI,GAGhCG,EAAI,UAAMT,EAAEU,WAAR,YAAsBV,EAAEW,aAAxB,YAAwCX,EAAEY,cAgBpD,OACE,6BACE,yBAAK3B,UAAU,qBACb,wBAAIA,UAAU,iBAAd,eACA,2BACE4B,YAAY,sBACZC,KAAK,OACLC,KAAK,gBACLC,SAtBa,SAACC,GACpBrB,EAAiBqB,EAAEC,OAAOC,QAsBpBA,MAAOxB,GAAiB,GACxBV,UAAU,kBAEZ,4BAAQmC,QAvBM,SAACH,GACnBA,EAAEI,iBAEFtB,EAAe,CAAET,SAAUkB,EAAUnB,YAAaoB,IAElDa,IAAMC,IAAN,qBAAwB5B,IAAiB6B,MAAK,SAACC,GAC7C,IAAMC,EAAcD,EAAI/C,KACxBmB,EAAY,CAAC6B,QAgBmBzC,UAAU,sBAAxC,WAIF,kBAAC,EAAD,CAAab,SAAUA,EAAUiB,YAAaA,MClDrCsC,MARf,WACE,OACE,yBAAK1C,UAAU,OACb,kBAAC,EAAD,QCHN2C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.28b46541.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sun.8f22f87e.png\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.8acee2ee.png\";","module.exports = __webpack_public_path__ + \"static/media/sunrise.007f2867.png\";","module.exports = __webpack_public_path__ + \"static/media/rain.b295288e.png\";","module.exports = __webpack_public_path__ + \"static/media/moon.7fc1c146.png\";","module.exports = __webpack_public_path__ + \"static/media/solar.5a69be1a.png\";","import React, { useState } from \"react\";\r\nimport sun from \"./Images/sun.png\";\r\nimport moon from \"./Images/moon.png\";\r\nimport cloudy from \"./Images/cloudy.png\";\r\nimport haze from \"./Images/sunrise.png\";\r\nimport solar from \"./Images/solar.png\";\r\nimport rain from \"./Images/rain.png\";\r\n\r\nfunction ShowWeather(props) {\r\n  const [showWeatherIcon, setShowWeatherIcon] = useState();\r\n  const forecast = props.forecast.map((item, i) => {\r\n    const weatherDescription = item.temperature.data[0].main;\r\n\r\n    let icon;\r\n\r\n    switch (weatherDescription) {\r\n      case \"Clouds\":\r\n        icon = cloudy;\r\n        break;\r\n      case \"Haze\":\r\n        icon = haze;\r\n        break;\r\n      case \"Clear\":\r\n        icon = sun;\r\n        break;\r\n      case \"Rain\":\r\n        icon = rain;\r\n    }\r\n\r\n    return (\r\n      <div key={i} className=\"showWeather-card\">\r\n        <div className=\"showWeather-location-and-date\">\r\n          <h1>{item.location}</h1>\r\n          <div style={{ color: \"white\" }}>\r\n            <p>{props.currentDate.fulldate}</p>\r\n            <p>As of {props.currentDate.currentDate}</p>\r\n            <p>Currently : {item.temperature.data[0].main}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"showWeather-high-low\">\r\n          <div className=\"showWeather-morning\">\r\n            <p>Low</p>\r\n            <img src={icon} />\r\n            <p>{item.temperature.low} °F </p>\r\n          </div>\r\n\r\n          <div className=\"showWeather-current\">\r\n            <p>Current</p>\r\n            <img src={icon} />\r\n            <p>{item.temperature.temperature} °F </p>\r\n          </div>\r\n\r\n          <div className=\"showWeather-night\">\r\n            <p>High</p>\r\n            <img src={icon} />\r\n            <p>{item.temperature.high} °F </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return <div className=\"showWeather-container\">{forecast}</div>;\r\n}\r\n\r\nexport default ShowWeather;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport ShowWeather from \"./ShowWeather\";\r\n\r\nfunction Weather() {\r\n  const [inputLocation, setInputLocation] = useState(\"\");\r\n  const [forecast, setForecast] = useState([]);\r\n  const [currentDate, setCurrentDate] = useState({ fulldate: \"\", currentTime: \"\" });\r\n\r\n  const d = new Date();\r\n  const date = d.getDate();\r\n  const months = [\r\n    \"January\",\r\n    \"Febuary\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n  //get date\r\n  const month = months[d.getMonth()];\r\n  const year = d.getFullYear();\r\n  const fullDate = `${month} ${date}, ${year}`;\r\n\r\n  //get time\r\n  const time = `${d.getHours()}:${d.getMinutes()}:${d.getSeconds()}`;\r\n\r\n  const handleChange = (e) => {\r\n    setInputLocation(e.target.value);\r\n  };\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n\r\n    setCurrentDate({ fulldate: fullDate, currentDate: time });\r\n\r\n    axios.get(`/weather?q=${inputLocation}`).then((res) => {\r\n      const weatherData = res.data;\r\n      setForecast([weatherData]);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"weather-container\">\r\n        <h1 className=\"weather-title\">Weather App</h1>\r\n        <input\r\n          placeholder=\"enter location here\"\r\n          type=\"text\"\r\n          name=\"inputLocation\"\r\n          onChange={handleChange}\r\n          value={inputLocation || \"\"}\r\n          className=\"weather-input\"\r\n        />\r\n        <button onClick={handleClick} className=\"weather-submit-btn\">\r\n          Submit\r\n        </button>\r\n      </div>\r\n      <ShowWeather forecast={forecast} currentDate={currentDate} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n","import React from \"react\";\nimport \"./App.scss\";\nimport Weather from \"./Components/Weather\";\nimport Header from \"./Components/Header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Weather />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}